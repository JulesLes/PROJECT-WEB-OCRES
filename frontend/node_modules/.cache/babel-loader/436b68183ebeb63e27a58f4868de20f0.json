{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/ING 4 /PROJECT-WEB-OCRES/frontend/src/components/News/NewsWidget.js\";\nimport React, { Component } from 'react';\nimport './NewsWidget.css';\nexport default class NewsWidget extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      news: null,\n      newsToDisplay: ''\n    };\n  }\n\n  componentDidMount() {\n    var url = `https://newsapi.org/v2/top-headlines?country=fr&apiKey=448fce7c3a0e49c686457f7dbc4ca63f`;\n    this.loadNews(url);\n  }\n\n  loadNews(url) {\n    fetch(url).then(response => response.json()).then(data => {\n      this.setState({\n        news: data\n      }); // Allows to get a news as soon as the app is loaded\n\n      this.setState({\n        newsToDisplay: data['articles'][0]\n      });\n    });\n  }\n  /**\n   * Selects a news to display from the set of news\n   */\n\n\n  getOneNews() {\n    const {\n      news\n    } = this.state;\n    const random = Math.floor(Math.random() * news['totalResults']);\n    this.setState({\n      newsToDisplay: news['articles'][random]\n    });\n  }\n\n  render() {\n    const {\n      newsToDisplay\n    } = this.state;\n    const {\n      refreshNewsMilliseconds = 10000\n    } = this.props;\n    /**\n     * Select another news to display every X seconds\n     */\n\n    setTimeout(() => {\n      this.getOneNews();\n    }, refreshNewsMilliseconds);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"widget\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"image\",\n      src: newsToDisplay['urlToImage'],\n      alt: \"news img\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"a\", {\n      className: \"link\",\n      href: newsToDisplay['url'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, newsToDisplay['title']), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"from\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, \"From: \", newsToDisplay.source ? newsToDisplay.source.name : '?'));\n  }\n\n}","map":{"version":3,"sources":["/Applications/MAMP/htdocs/ING 4 /PROJECT-WEB-OCRES/frontend/src/components/News/NewsWidget.js"],"names":["React","Component","NewsWidget","state","news","newsToDisplay","componentDidMount","url","loadNews","fetch","then","response","json","data","setState","getOneNews","random","Math","floor","render","refreshNewsMilliseconds","props","setTimeout","source","name"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,kBAAP;AAEA,eAAe,MAAMC,UAAN,SAAyBD,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAC9CE,KAD8C,GACtC;AACJC,MAAAA,IAAI,EAAE,IADF;AAEJC,MAAAA,aAAa,EAAE;AAFX,KADsC;AAAA;;AAM9CC,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,GAAG,GAAI,yFAAX;AAEA,SAAKC,QAAL,CAAcD,GAAd;AACH;;AAEDC,EAAAA,QAAQ,CAACD,GAAD,EAAM;AACVE,IAAAA,KAAK,CAACF,GAAD,CAAL,CACKG,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,IAAI,IAAI;AACV,WAAKC,QAAL,CAAc;AAACV,QAAAA,IAAI,EAAES;AAAP,OAAd,EADU,CAEV;;AACA,WAAKC,QAAL,CAAc;AAACT,QAAAA,aAAa,EAAEQ,IAAI,CAAC,UAAD,CAAJ,CAAiB,CAAjB;AAAhB,OAAd;AACH,KANL;AAOH;AAED;AACJ;AACA;;;AACIE,EAAAA,UAAU,GAAG;AACT,UAAM;AAACX,MAAAA;AAAD,QAAS,KAAKD,KAApB;AACA,UAAMa,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACD,MAAL,KAAgBZ,IAAI,CAAC,cAAD,CAA/B,CAAf;AACA,SAAKU,QAAL,CAAc;AAACT,MAAAA,aAAa,EAAED,IAAI,CAAC,UAAD,CAAJ,CAAiBY,MAAjB;AAAhB,KAAd;AACH;;AAEDG,EAAAA,MAAM,GAAG;AACL,UAAM;AAACd,MAAAA;AAAD,QAAkB,KAAKF,KAA7B;AACA,UAAM;AAACiB,MAAAA,uBAAuB,GAAG;AAA3B,QAAoC,KAAKC,KAA/C;AAEA;AACR;AACA;;AACQC,IAAAA,UAAU,CAAC,MAAM;AACb,WAAKP,UAAL;AACH,KAFS,EAEPK,uBAFO,CAAV;AAIA,wBACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAuB,MAAA,GAAG,EAAEf,aAAa,CAAC,YAAD,CAAzC;AAAyD,MAAA,GAAG,EAAC,UAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAGI;AAAG,MAAA,SAAS,EAAC,MAAb;AAAoB,MAAA,IAAI,EAAEA,aAAa,CAAC,KAAD,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiDA,aAAa,CAAC,OAAD,CAA9D,CAHJ,eAKI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAA6BA,aAAa,CAACkB,MAAd,GAAuBlB,aAAa,CAACkB,MAAd,CAAqBC,IAA5C,GAAmD,GAAhF,CALJ,CADJ;AASH;;AAnD6C","sourcesContent":["import React, {Component} from 'react';\nimport './NewsWidget.css';\n\nexport default class NewsWidget extends Component {\n    state = {\n        news: null,\n        newsToDisplay: ''\n    };\n\n    componentDidMount() {\n        var url = `https://newsapi.org/v2/top-headlines?country=fr&apiKey=448fce7c3a0e49c686457f7dbc4ca63f`;\n\n        this.loadNews(url);\n    }\n\n    loadNews(url) {\n        fetch(url)\n            .then(response => response.json())\n            .then(data => {\n                this.setState({news: data});\n                // Allows to get a news as soon as the app is loaded\n                this.setState({newsToDisplay: data['articles'][0]})\n            });\n    }\n\n    /**\n     * Selects a news to display from the set of news\n     */\n    getOneNews() {\n        const {news} = this.state;\n        const random = Math.floor(Math.random() * news['totalResults']);\n        this.setState({newsToDisplay: news['articles'][random]});\n    }\n\n    render() {\n        const {newsToDisplay} = this.state;\n        const {refreshNewsMilliseconds = 10000} = this.props;\n\n        /**\n         * Select another news to display every X seconds\n         */\n        setTimeout(() => {\n            this.getOneNews();\n        }, refreshNewsMilliseconds);\n\n        return (\n            <div className=\"widget\">\n                <img className=\"image\" src={newsToDisplay['urlToImage']} alt=\"news img\"/>\n\n                <a className=\"link\" href={newsToDisplay['url']}>{newsToDisplay['title']}</a>\n\n                <div className=\"from\">From: {newsToDisplay.source ? newsToDisplay.source.name : '?'}</div>\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}