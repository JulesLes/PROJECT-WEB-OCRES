{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/ING 4 /PROJECT-WEB-OCRES/frontend/src/components/Bourse/StockRow.js\";\nimport React, { Component } from 'react';\nimport { stock } from './stock.js';\nexport default class StockRow extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      price: null,\n      date: null,\n      time: null,\n      dollar_change: null,\n      percent_change: null\n    };\n  }\n\n  changedStyle() {\n    return {\n      color: this.state.dollar_change > 0 ? '#4caf50' : '#e53935',\n      fontSize: '0.8rem',\n      marginLeft: 5\n    };\n  }\n\n  applyData(data) {\n    const formattedPrice = data.price == undefined ? null : data.price.toFixed(2);\n    this.setState({\n      price: data.formattedPrice,\n      date: data.date,\n      time: data.time\n    });\n  }\n\n  componentDiMount() {\n    stock.latestPrice(this.props.ticker, this.applyData.bind(this));\n  }\n\n  componentDiUpdate(prevProps) {\n    this.setCanRetrieveClose(prevprops);\n\n    if (this.state.canRetrieveClose && this.state.price != null) {\n      stock.getYerstedaysClose(this.props.ticker, this.props.lastTradingDate, yersterday => {\n        const dollar_change = (this.state.price - yersterday.price).toFixed(2);\n        const percent_change = (100 * dollar_change / yersterday.price).toFixed(2);\n        this.setState({\n          dollar_change: `${dollar_change}`,\n          percent_change: ` (${percent_change}%)`,\n          canRetrieveClose: false\n        });\n      });\n    }\n  }\n\n  setCanRetrieveClose(prevprops) {\n    if (prevProps.lastTradingDate == null && this.props.lastTradingDate != null) {\n      this.setState({\n        canRetrieveClose: true\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, this.props.ticker), \" $\", this.state.data.price, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"change\",\n      style: this.changedStyle(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    }, this.state.dollar_change, this.state.percent_change));\n  }\n\n}","map":{"version":3,"sources":["/Applications/MAMP/htdocs/ING 4 /PROJECT-WEB-OCRES/frontend/src/components/Bourse/StockRow.js"],"names":["React","Component","stock","StockRow","constructor","props","state","price","date","time","dollar_change","percent_change","changedStyle","color","fontSize","marginLeft","applyData","data","formattedPrice","undefined","toFixed","setState","componentDiMount","latestPrice","ticker","bind","componentDiUpdate","prevProps","setCanRetrieveClose","prevprops","canRetrieveClose","getYerstedaysClose","lastTradingDate","yersterday","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { stock } from './stock.js';\n\nexport default class StockRow extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            price: null,\n            date: null,\n            time: null,\n            dollar_change: null,\n            percent_change: null\n        }\n    }\n\n    changedStyle() {\n\n        return {\n\n        color: (this.state.dollar_change >0) ? '#4caf50' : '#e53935',\n        fontSize: '0.8rem',\n        marginLeft: 5\n        }\n    }\n\n    applyData(data) {\n\n        const formattedPrice = (data.price == undefined) ? null : data.price.toFixed(2)\n\n        this.setState({\n\n            price: data.formattedPrice,\n            date: data.date,\n            time: data.time,\n        });\n    }\n\n    componentDiMount() {\n\n        stock.latestPrice(this.props.ticker, this.applyData.bind(this))\n    }\n\n    componentDiUpdate(prevProps) {\n\n        this.setCanRetrieveClose(prevprops)\n\n        if(this.state.canRetrieveClose && this.state.price != null) {\n\n            stock.getYerstedaysClose(this.props.ticker, this.props.lastTradingDate, (yersterday) => {\n\n                const dollar_change = (this.state.price - yersterday.price).toFixed(2);\n                const percent_change = (100 * dollar_change / yersterday.price).toFixed(2);\n\n                this.setState({\n\n                    dollar_change: `${dollar_change}`,\n                    percent_change: ` (${percent_change}%)`,\n                    canRetrieveClose: false\n                })\n            })\n        }\n    }\n\n    setCanRetrieveClose(prevprops) {\n\n        if(prevProps.lastTradingDate == null && this.props.lastTradingDate != null) {\n\n            this.setState ({\n\n                canRetrieveClose: true\n            })\n        }\n    }\n\n    render() {\n\n        return (\n\n            <li className=\"list-group-item\">\n                <b>{this.props.ticker}</b> ${this.state.data.price}\n                    <span className=\"change\" style={this.changedStyle()}>\n                    {this.state.dollar_change}\n                    {this.state.percent_change}\n                </span>\n            </li>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}