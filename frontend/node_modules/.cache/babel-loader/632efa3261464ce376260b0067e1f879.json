{"ast":null,"code":"import { iex } from './iex.js';\nexport const stock = {\n  latestPrice: (ticker, callback) => {\n    fetch(stock.latestPriceURL(ticker)).then(response => response.json()).then(data => callback(stock.formatPriceData(data)));\n  },\n  latestPriceURL: ticker => {\n    return `${iex.base_url}/stock/${ticker}/intraday-prices?chartLast=1&token=${iex.api_token}`;\n  },\n  formatPriceData: data => {\n    const stockData = data[data.length - 1];\n    const formattedData = {};\n    formattedData.price = stockData.close;\n    formattedData.date = stockData.date;\n    formattedData.time = stockData.label;\n    return formattedData;\n  },\n  getYersterdaysClose: (ticket, lastTradingDate, callback) => {\n    if (lastTradingDate != \"\" && lastTradingDate != undefined) {\n      const url = stock.yersterdaysCloseURL(ticker, stock.formatDate(lastTradingDate));\n      fetch(url).then(response => response.json()).then(data => callback(stock.formatPriceData(data)));\n    }\n  },\n  getLastTradingDate: () => {\n    const today = new Date().toISOString().split('T')[0].replace(/-/g, '');\n    const url = `${iex.base_url}/ref-data/us/dates/trade/last/1/${today}?token=${iex.api_token}`;\n    return fetch(url).then(res => res.json());\n  },\n  yersterdaysCloseURL: (ticker, lastTradingDate) => {\n    var lastTradingDate = stock.formatDate(date);\n    return `${iex.base_url}/stock/${ticker}/intraday-prices?chartLast=1&exactDate=${lastTradingDate}&token=${iex.api_token}`;\n  },\n  formatDate: date => {\n    return new Date(date).toISOString().split('T')[0].replace(/-/g, '');\n  }\n};","map":{"version":3,"sources":["/Applications/MAMP/htdocs/ING 4 /PROJECT-WEB-OCRES/frontend/src/components/Bourse/stock.js"],"names":["iex","stock","latestPrice","ticker","callback","fetch","latestPriceURL","then","response","json","data","formatPriceData","base_url","api_token","stockData","length","formattedData","price","close","date","time","label","getYersterdaysClose","ticket","lastTradingDate","undefined","url","yersterdaysCloseURL","formatDate","getLastTradingDate","today","Date","toISOString","split","replace","res"],"mappings":"AAAA,SAASA,GAAT,QAAoB,UAApB;AAEA,OAAO,MAAMC,KAAK,GAAG;AAEjBC,EAAAA,WAAW,EAAE,CAACC,MAAD,EAASC,QAAT,KAAsB;AAE/BC,IAAAA,KAAK,CAACJ,KAAK,CAACK,cAAN,CAAqBH,MAArB,CAAD,CAAL,CACCI,IADD,CACOC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADpB,EAECF,IAFD,CAEOG,IAAD,IAAUN,QAAQ,CAACH,KAAK,CAACU,eAAN,CAAsBD,IAAtB,CAAD,CAFxB;AAGH,GAPgB;AASjBJ,EAAAA,cAAc,EAAGH,MAAD,IAAY;AACxB,WAAQ,GAAEH,GAAG,CAACY,QAAS,UAAST,MAAO,sCAAqCH,GAAG,CAACa,SAAU,EAA1F;AACH,GAXgB;AAajBF,EAAAA,eAAe,EAAGD,IAAD,IAAU;AAEvB,UAAMI,SAAS,GAAGJ,IAAI,CAACA,IAAI,CAACK,MAAL,GAAc,CAAf,CAAtB;AACA,UAAMC,aAAa,GAAG,EAAtB;AACAA,IAAAA,aAAa,CAACC,KAAd,GAAsBH,SAAS,CAACI,KAAhC;AACAF,IAAAA,aAAa,CAACG,IAAd,GAAqBL,SAAS,CAACK,IAA/B;AACAH,IAAAA,aAAa,CAACI,IAAd,GAAqBN,SAAS,CAACO,KAA/B;AACA,WAAOL,aAAP;AACH,GArBgB;AAuBjBM,EAAAA,mBAAmB,EAAE,CAACC,MAAD,EAASC,eAAT,EAA0BpB,QAA1B,KAAuC;AAExD,QAAIoB,eAAe,IAAI,EAAnB,IAAyBA,eAAe,IAAIC,SAAhD,EAA2D;AACvD,YAAMC,GAAG,GAAGzB,KAAK,CAAC0B,mBAAN,CAA0BxB,MAA1B,EAAkCF,KAAK,CAAC2B,UAAN,CAAiBJ,eAAjB,CAAlC,CAAZ;AACAnB,MAAAA,KAAK,CAACqB,GAAD,CAAL,CACCnB,IADD,CACOC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADpB,EAECF,IAFD,CAEOG,IAAD,IAAUN,QAAQ,CAACH,KAAK,CAACU,eAAN,CAAsBD,IAAtB,CAAD,CAFxB;AAGH;AACJ,GA/BgB;AAiCjBmB,EAAAA,kBAAkB,EAAE,MAAM;AAEtB,UAAMC,KAAK,GAAG,IAAIC,IAAJ,GAAWC,WAAX,GAAyBC,KAAzB,CAA+B,GAA/B,EAAoC,CAApC,EAAuCC,OAAvC,CAA+C,IAA/C,EAAqD,EAArD,CAAd;AAEA,UAAMR,GAAG,GAAI,GAAE1B,GAAG,CAACY,QAAS,mCAAkCkB,KAAM,UAAS9B,GAAG,CAACa,SAAU,EAA3F;AAEA,WAAOR,KAAK,CAACqB,GAAD,CAAL,CAAWnB,IAAX,CAAiB4B,GAAD,IAASA,GAAG,CAAC1B,IAAJ,EAAzB,CAAP;AACH,GAxCgB;AA0CjBkB,EAAAA,mBAAmB,EAAE,CAACxB,MAAD,EAASqB,eAAT,KAA6B;AAE9C,QAAIA,eAAe,GAAGvB,KAAK,CAAC2B,UAAN,CAAiBT,IAAjB,CAAtB;AACA,WAAQ,GAAEnB,GAAG,CAACY,QAAS,UAAST,MAAO,0CAAyCqB,eAAgB,UAASxB,GAAG,CAACa,SAAU,EAAvH;AACH,GA9CgB;AAgDjBe,EAAAA,UAAU,EAAGT,IAAD,IAAU;AAElB,WAAO,IAAIY,IAAJ,CAASZ,IAAT,EAAea,WAAf,GAA6BC,KAA7B,CAAmC,GAAnC,EAAwC,CAAxC,EAA2CC,OAA3C,CAAmD,IAAnD,EAAyD,EAAzD,CAAP;AACH;AAnDgB,CAAd","sourcesContent":["import { iex } from './iex.js';\n\nexport const stock = {\n    \n    latestPrice: (ticker, callback) => {\n        \n        fetch(stock.latestPriceURL(ticker))\n        .then((response) => response.json()) \n        .then((data) => callback(stock.formatPriceData(data)))\n    },\n    \n    latestPriceURL: (ticker) => {\n        return `${iex.base_url}/stock/${ticker}/intraday-prices?chartLast=1&token=${iex.api_token}`\n    },\n        \n    formatPriceData: (data) => {\n        \n        const stockData = data[data.length - 1]\n        const formattedData = {}\n        formattedData.price = stockData.close\n        formattedData.date = stockData.date\n        formattedData.time = stockData.label\n        return formattedData\n    },\n    \n    getYersterdaysClose: (ticket, lastTradingDate, callback) => {\n  \n        if (lastTradingDate != \"\" && lastTradingDate != undefined) {\n            const url = stock.yersterdaysCloseURL(ticker, stock.formatDate(lastTradingDate))\n            fetch(url)\n            .then((response) => response.json()) \n            .then((data) => callback(stock.formatPriceData(data)))\n        }\n    }, \n    \n    getLastTradingDate: () => {\n        \n        const today = new Date().toISOString().split('T')[0].replace(/-/g, '');\n\n        const url = `${iex.base_url}/ref-data/us/dates/trade/last/1/${today}?token=${iex.api_token}`\n        \n        return fetch(url).then((res) => res.json());\n    },\n    \n    yersterdaysCloseURL: (ticker, lastTradingDate) => {\n        \n        var lastTradingDate = stock.formatDate(date);\n        return `${iex.base_url}/stock/${ticker}/intraday-prices?chartLast=1&exactDate=${lastTradingDate}&token=${iex.api_token}`\n    },\n    \n    formatDate: (date) => {\n        \n        return new Date(date).toISOString().split('T')[0].replace(/-/g, '');\n    }\n    \n}"]},"metadata":{},"sourceType":"module"}