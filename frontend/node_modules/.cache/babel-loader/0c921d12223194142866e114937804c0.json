{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/ING 4 /PROJECT-WEB-OCRES/frontend/src/components/Graph2/Graph2.js\";\nimport axios from 'axios';\nimport React, { PureComponent } from 'react';\nimport { ResponsiveContainer, BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport './Graph2.css';\n\nconst DataFormater = number => {\n  if (number > 1000000000) {\n    return (number / 1000000000).toString() + 'B';\n  } else if (number > 1000000) {\n    return (number / 1000000).toString() + 'M';\n  } else if (number > 1000) {\n    return (number / 1000).toString() + 'K';\n  } else {\n    return number.toString();\n  }\n};\n\nconst data = [{\n  name: '2A',\n  CF: 54,\n  NC: 12,\n  amt: 2400\n}, {\n  name: '2B',\n  CF: 8,\n  NC: 12,\n  amt: 2210\n}, {\n  name: '4A',\n  CF: 3,\n  NC: 20,\n  amt: 2290\n}, {\n  name: '4B',\n  CF: 11,\n  NC: 9,\n  amt: 2290\n}];\nexport default class Example extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: [] //mapDatas: new Map()\n      //{'TD3', [1,6]}\n\n    };\n  }\n\n  componentDidMount() {\n    var url = 'http://localhost:3000/api/';\n    this.loadNews(url);\n  }\n\n  loadNews(url) {\n    axios.get(url).then(response => response.json()).then(res => {\n      this.setState({\n        data: res\n      });\n    }); // this.state.data.forEach((elem)=>{\n    //     this.state.mapDatas.has(elem.groupe)?\n    //         elem.etat?this.state.mapDatas.get(elem.groupe)[0]++:this.state.mapDatas.get(elem.groupe)[1]++\n    //     :\n    //     elem.etat?this.state.mapDatas.set(elem.groupe,[1,0]):this.state.mapDatas.set(elem.groupe,[0,1])\n    // })\n    // for(const key of this.state.mapDatas.keys()){console.log(key)}\n  } //insertNewStudent() {}\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"widgetGraph2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, \"Class Data\"), /*#__PURE__*/React.createElement(ResponsiveContainer, {\n      width: \"95%\",\n      height: 350,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(BarChart, {\n      width: 500,\n      height: 300,\n      data: data,\n      margin: {\n        top: 20,\n        right: 30,\n        left: 20,\n        bottom: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(CartesianGrid, {\n      strokeDasharray: \"3 3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(XAxis, {\n      dataKey: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(YAxis, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tooltip, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Legend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 19\n      }\n    }))));\n  }\n\n}\nExample.jsfiddleUrl = 'https://jsfiddle.net/alidingling/q4eonc12/';","map":{"version":3,"sources":["/Applications/MAMP/htdocs/ING 4 /PROJECT-WEB-OCRES/frontend/src/components/Graph2/Graph2.js"],"names":["axios","React","PureComponent","ResponsiveContainer","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","DataFormater","number","toString","data","name","CF","NC","amt","Example","state","componentDidMount","url","loadNews","get","then","response","json","res","setState","render","top","right","left","bottom","jsfiddleUrl"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport React, { PureComponent } from 'react';\nimport {ResponsiveContainer, BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend,} from 'recharts';\nimport './Graph2.css';\n\nconst DataFormater = (number) => {\n    if(number > 1000000000){\n      return (number/1000000000).toString() + 'B';\n    }else if(number > 1000000){\n      return (number/1000000).toString() + 'M';\n    }else if(number > 1000){\n      return (number/1000).toString() + 'K';\n    }else{\n      return number.toString();\n    }\n}\n\nconst data = [\n  {\n    name: '2A', CF: 54, NC: 12, amt: 2400,\n  },\n  {\n    name: '2B', CF: 8, NC: 12, amt: 2210,\n  },\n  {\n    name: '4A', CF: 3, NC: 20, amt: 2290,\n  },\n  {\n    name: '4B', CF: 11, NC: 9, amt: 2290,\n  },\n];\n\n\nexport default class Example extends PureComponent {\n  static jsfiddleUrl = 'https://jsfiddle.net/alidingling/q4eonc12/';\n\n  state = {\n      data:[],\n      //mapDatas: new Map()\n      //{'TD3', [1,6]}\n\n  };\n\n  componentDidMount() {\n      var url = 'http://localhost:3000/api/';\n      this.loadNews(url);\n  }\n\n\nloadNews(url) {\n      axios.get(url)\n          .then(response => response.json())\n          .then(res => {\n              this.setState({data: res});\n          });\n\n      // this.state.data.forEach((elem)=>{\n      //     this.state.mapDatas.has(elem.groupe)?\n      //         elem.etat?this.state.mapDatas.get(elem.groupe)[0]++:this.state.mapDatas.get(elem.groupe)[1]++\n      //     :\n      //     elem.etat?this.state.mapDatas.set(elem.groupe,[1,0]):this.state.mapDatas.set(elem.groupe,[0,1])\n      // })\n      // for(const key of this.state.mapDatas.keys()){console.log(key)}\n  }\n\n//insertNewStudent() {}\n  render() {\n    return (\n      <div className=\"widgetGraph2\">\n        <h5>Class Data</h5>\n            <ResponsiveContainer width=\"95%\" height={350}>\n              <BarChart width={500} height={300} data={data} margin={{ top: 20, right: 30, left: 20, bottom: 5,}}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"name\" />\n                  <YAxis />\n                  <Tooltip />\n                  <Legend />\n              </BarChart>\n          </ResponsiveContainer>\n    </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}