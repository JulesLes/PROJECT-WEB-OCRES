{"ast":null,"code":"function StockListCtrl($scope, $http, Chameleon, version) {\n  var bugsense = new Bugsense({\n    apiKey: 'ffae2ef2',\n    appversion: version\n  });\n  var POLL_ID = 'stock-update';\n  var POLL_PERIOD = 30 * 60; // 30 minutes between updates.\n\n  var API_URL = 'http://widgetgecko.com/api/stocks/'; // This has to be done like this or it doesn't work.\n  // I should probably figure out why at some point, but not right now.\n\n  setTimeout(function () {\n    Chameleon.init({\n      version: version\n    });\n  }, 1);\n  scope.stocks = [];\n  scope.symbols = [];\n  scope.isConfigured = false;\n  scope.$on('chameleon.load', startPolling);\n  scope.$on('chameleon.resume', startPolling);\n  scope.$on('chameleon.pause', stopPolling);\n  scope.$on('chameleon.connect', startPolling);\n  scope.$on('chameleon.disconnect', stopPolling);\n  scope.$on('chameleon.notchameleon', startPolling);\n  scope.$on('chameleon.configure', showSettings);\n  scope.$on('chameleon.refresh', function () {\n    updateStocks();\n  }); // Very, very debug code.\n\n  scope.$on('chameleon.notchameleon', function () {\n    'body'.addClass('not-chameleon');\n  });\n\n  function startPolling(event) {\n    loadSymbols(function () {\n      stopPolling();\n\n      if ($scope.symbols.length === 0) {\n        $scope.isConfigured = false;\n        return;\n      }\n\n      scope.isConfigured = true;\n      updateStocks();\n      scope.$emit('chameleon.polling.start', {\n        id: POLL_ID,\n        interval: POLL_PERIOD,\n        callback: function () {\n          updateStocks();\n        }\n      });\n    });\n  }\n\n  function stopPolling(event) {\n    scope.$emit('chameleon.polling.stop', {\n      id: POLL_ID\n    });\n  }\n\n  function updateStocks() {\n    scope.$emit('chameleon.showLoading');\n    http.get(API_URL + '?symbol=' + _.pluck($scope.symbols, 'name').join('|')).success(function (data) {\n      scope.stocks = data;\n      scope.$emit('chameleon.invalidate');\n      scope.$emit('chameleon.hideLoading');\n    });\n  }\n\n  function showSettings() {\n    scope.$emit('chameleon.promptHtml', {\n      url: 'settings.html',\n      callback: function () {\n        startPolling();\n      }\n    });\n  }\n\n  scope.showSettings = function () {\n    showSettings();\n  };\n\n  function loadSymbols(callback) {\n    $scope.$emit('chameleon.getData', function (data) {\n      $scope.$apply(function () {\n        if (data && data.symbols) {\n          $scope.symbols = data.symbols;\n        }\n\n        callback();\n      });\n    });\n  }\n}\n\nfunction StockSettingsCtrl($scope, Chameleon, version) {\n  // This has to be done like this or it doesn't work.\n  // I should probably figure out why at some point, but not right now.\n  setTimeout(function () {\n    Chameleon.init({\n      version: version\n    });\n    loadSymbols();\n  }, 1);\n\n  $scope.addSymbol = function () {\n    $scope.symbols.push({\n      name: $scope.newSymbol.toUpperCase()\n    });\n    $scope.newSymbol = '';\n    saveSymbols();\n  };\n\n  $scope.removeSymbol = function (symbol) {\n    $scope.symbols = _.reject($scope.symbols, function (s) {\n      return s.name === symbol.name;\n    });\n    saveSymbols();\n  };\n\n  scope.close = function () {\n    scope.$emit('chameleon.close', true);\n  };\n\n  function saveSymbols() {\n    $scope.$emit('chameleon.getData', function (data) {\n      if (!data) {\n        data = {};\n      }\n\n      data.symbols = $scope.symbols;\n      $scope.$emit('chameleon.saveData', data);\n    });\n  }\n\n  function loadSymbols() {\n    $scope.$emit('chameleon.getData', function (data) {\n      $scope.$apply(function () {\n        if (data && data.symbols) {\n          $scope.symbols = data.symbols;\n        }\n      });\n    });\n  }\n\n  scope.symbols = [];\n}","map":{"version":3,"sources":["/Users/mickael/Desktop/MICKAEÌˆL/ECE Paris - ING 4/Technologies Web/PROJECT-WEB-OCRES/frontend/src/components/Bourse/Bourse.js"],"names":["StockListCtrl","$scope","$http","Chameleon","version","bugsense","Bugsense","apiKey","appversion","POLL_ID","POLL_PERIOD","API_URL","setTimeout","init","scope","stocks","symbols","isConfigured","$on","startPolling","stopPolling","showSettings","updateStocks","addClass","event","loadSymbols","length","$emit","id","interval","callback","http","get","_","pluck","join","success","data","url","$apply","StockSettingsCtrl","addSymbol","push","name","newSymbol","toUpperCase","saveSymbols","removeSymbol","symbol","reject","s","close"],"mappings":"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","sourcesContent":["function StockListCtrl($scope, $http, Chameleon, version) {\n\n  var bugsense = new Bugsense({ apiKey: 'ffae2ef2', appversion: version });\n  var POLL_ID = 'stock-update';\n  var POLL_PERIOD = 30 * 60; // 30 minutes between updates.\n  var API_URL = 'http://widgetgecko.com/api/stocks/';\n\n  // This has to be done like this or it doesn't work.\n  // I should probably figure out why at some point, but not right now.\n  setTimeout(function () {\n    Chameleon.init({ version: version });\n  }, 1);\n\n   scope.stocks = [];\n  scope.symbols = [];\n  scope.isConfigured = false;\n\n  scope.$on('chameleon.load', startPolling);\n  scope.$on('chameleon.resume', startPolling);\n  scope.$on('chameleon.pause', stopPolling);\n  scope.$on('chameleon.connect', startPolling);\n  scope.$on('chameleon.disconnect', stopPolling);\n  scope.$on('chameleon.notchameleon', startPolling);\n  scope.$on('chameleon.configure', showSettings);\n  scope.$on('chameleon.refresh', function () {\n    updateStocks();\n  });\n\n  // Very, very debug code.\n  scope.$on('chameleon.notchameleon', function () {\n    ('body').addClass('not-chameleon');\n  });\n\n  function startPolling(event) {\n    loadSymbols(function () {\n      stopPolling();\n      if ($scope.symbols.length === 0) {\n        $scope.isConfigured = false;\n        return;\n      }\n      scope.isConfigured = true;\n      updateStocks();\n      scope.$emit('chameleon.polling.start', {\n        id: POLL_ID,\n        interval: POLL_PERIOD,\n        callback: function () {\n          updateStocks();\n        }\n      });\n    });\n  }\n\n  function stopPolling(event) {\n    scope.$emit('chameleon.polling.stop', {\n      id: POLL_ID\n    });\n  }\n\n  function updateStocks() {\n    scope.$emit('chameleon.showLoading');\n    http.get(API_URL + '?symbol=' + _.pluck($scope.symbols, 'name').join('|'))\n      .success(function (data) {\n        scope.stocks = data;\n        scope.$emit('chameleon.invalidate');\n        scope.$emit('chameleon.hideLoading');\n      });\n  }\n\n  function showSettings() {\nscope.$emit('chameleon.promptHtml', {\n      url: 'settings.html',\n      callback: function () {\n        startPolling();\n      }\n    });\n  }\n\n  scope.showSettings = function () {\n    showSettings();\n  };\n\n  function loadSymbols(callback) {\n    $scope.$emit('chameleon.getData', function (data) {\n      $scope.$apply(function () {\n        if (data && data.symbols) {\n          $scope.symbols = data.symbols;\n        }\n        callback();\n      })\n    });\n  }\n}\n\nfunction StockSettingsCtrl($scope, Chameleon, version) {\n\n  // This has to be done like this or it doesn't work.\n  // I should probably figure out why at some point, but not right now.\n  setTimeout(function () {\n    Chameleon.init({ version: version });\n    loadSymbols();\n  }, 1);\n\n\n  $scope.addSymbol = function() {\n    $scope.symbols.push({ name: $scope.newSymbol.toUpperCase() });\n    $scope.newSymbol = '';\n    saveSymbols();\n  }\n\n  $scope.removeSymbol = function (symbol) {\n    $scope.symbols = _.reject($scope.symbols, function (s) {\n      return s.name === symbol.name;\n    });\n    saveSymbols();\n  }\n\n  scope.close = function () {\n    scope.$emit('chameleon.close', true);\n  }\n\n  function saveSymbols() {\n    $scope.$emit('chameleon.getData', function (data) {\n      if (! data) {\n        data = {};\n      }\n      data.symbols = $scope.symbols;\n      $scope.$emit('chameleon.saveData', data);\n    });\n  }\n\n  function loadSymbols() {\n    $scope.$emit('chameleon.getData', function (data) {\n      $scope.$apply(function () {\n        if (data && data.symbols) {\n          $scope.symbols = data.symbols;\n        }\n      })\n    });\n  }\n\n  scope.symbols = [];\n}"]},"metadata":{},"sourceType":"module"}