{"ast":null,"code":"import { iex } from './iex.js';\nexport const stock = {\n  latestPrice: (ticker, callback) => {\n    fetch(stock.latestPriceURL(ticker)).then(response => response.json()).then(data => callback(stock.formatPriceData(data)));\n  },\n  latestPriceURL: ticker => {\n    return `${iex.base_url}/stock/${ticker}/intraday-prices?chartLast=1&token=${iex.api_token}`;\n  },\n  formatPriceData: data => {\n    const stockData = data[data.length - 1];\n    const formattedData = {};\n    formattedData.price = stockData.close;\n    formattedData.date = stockData.date;\n    formattedData.time = stockData.label;\n    return formattedData;\n  },\n  getYersterdaysClose: (ticket, lastTradingDate, callback) => {\n    stock.getLastTradingDate(date).then(data => {\n      if (lastTradingDate != \"\" && lastTradingDate != undefined) {\n        const url = stock.yersterdaysCloseURL(ticker, lastTradingDate);\n        fetch(url).then(response => response.json()).then(data => callback(stock.formatPriceData(data)));\n      }\n    });\n  },\n  getLastTradingDate: date => {\n    var today = formatDate(date);\n    const url = `${iex.base_url}/ref-data/us/dates/trade/last/1/${today}?token=${iex.api_token}`;\n    return fetch(url).then(res => res.json());\n  },\n  yersterdaysCloseURL: (ticker, lastTradingDate) => {\n    var lastTradingDate = stock.formatDate(date);\n    return `${iex.base_url}/stock/${ticker}/intraday-prices?chartLast=1&exactDate=${lastTradingDate}&token=${iex.api_token}`;\n  },\n  formatDate: date => {\n    return Date(date).toISOString().split('T')[0].replace(/-/g, '');\n  }\n};","map":{"version":3,"sources":["/Users/mickael/Desktop/MICKAEÌˆL/ECE Paris - ING 4/Technologies Web/PROJECT-WEB-OCRES/frontend/src/components/Bourse/stock.js"],"names":["iex","stock","latestPrice","ticker","callback","fetch","latestPriceURL","then","response","json","data","formatPriceData","base_url","api_token","stockData","length","formattedData","price","close","date","time","label","getYersterdaysClose","ticket","lastTradingDate","getLastTradingDate","undefined","url","yersterdaysCloseURL","today","formatDate","res","Date","toISOString","split","replace"],"mappings":"AAAA,SAASA,GAAT,QAAoB,UAApB;AAEA,OAAO,MAAMC,KAAK,GAAG;AAEjBC,EAAAA,WAAW,EAAE,CAACC,MAAD,EAASC,QAAT,KAAsB;AAE/BC,IAAAA,KAAK,CAACJ,KAAK,CAACK,cAAN,CAAqBH,MAArB,CAAD,CAAL,CACCI,IADD,CACOC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADpB,EAECF,IAFD,CAEOG,IAAD,IAAUN,QAAQ,CAACH,KAAK,CAACU,eAAN,CAAsBD,IAAtB,CAAD,CAFxB;AAGH,GAPgB;AASjBJ,EAAAA,cAAc,EAAGH,MAAD,IAAY;AACxB,WAAQ,GAAEH,GAAG,CAACY,QAAS,UAAST,MAAO,sCAAqCH,GAAG,CAACa,SAAU,EAA1F;AACH,GAXgB;AAajBF,EAAAA,eAAe,EAAGD,IAAD,IAAU;AAEvB,UAAMI,SAAS,GAAGJ,IAAI,CAACA,IAAI,CAACK,MAAL,GAAc,CAAf,CAAtB;AACA,UAAMC,aAAa,GAAG,EAAtB;AACAA,IAAAA,aAAa,CAACC,KAAd,GAAsBH,SAAS,CAACI,KAAhC;AACAF,IAAAA,aAAa,CAACG,IAAd,GAAqBL,SAAS,CAACK,IAA/B;AACAH,IAAAA,aAAa,CAACI,IAAd,GAAqBN,SAAS,CAACO,KAA/B;AACA,WAAOL,aAAP;AACH,GArBgB;AAuBjBM,EAAAA,mBAAmB,EAAE,CAACC,MAAD,EAASC,eAAT,EAA0BpB,QAA1B,KAAuC;AAExDH,IAAAA,KAAK,CAACwB,kBAAN,CAAyBN,IAAzB,EAA+BZ,IAA/B,CAAqCG,IAAD,IAAS;AAEzC,UAAIc,eAAe,IAAI,EAAnB,IAAyBA,eAAe,IAAIE,SAAhD,EAA2D;AACvD,cAAMC,GAAG,GAAG1B,KAAK,CAAC2B,mBAAN,CAA0BzB,MAA1B,EAAkCqB,eAAlC,CAAZ;AACAnB,QAAAA,KAAK,CAACsB,GAAD,CAAL,CACCpB,IADD,CACOC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADpB,EAECF,IAFD,CAEOG,IAAD,IAAUN,QAAQ,CAACH,KAAK,CAACU,eAAN,CAAsBD,IAAtB,CAAD,CAFxB;AAGH;AACJ,KARD;AASH,GAlCgB;AAoCjBe,EAAAA,kBAAkB,EAAGN,IAAD,IAAU;AAE1B,QAAIU,KAAK,GAAGC,UAAU,CAACX,IAAD,CAAtB;AACA,UAAMQ,GAAG,GAAI,GAAE3B,GAAG,CAACY,QAAS,mCAAkCiB,KAAM,UAAS7B,GAAG,CAACa,SAAU,EAA3F;AAEA,WAAOR,KAAK,CAACsB,GAAD,CAAL,CAAWpB,IAAX,CAAiBwB,GAAD,IAASA,GAAG,CAACtB,IAAJ,EAAzB,CAAP;AACH,GA1CgB;AA4CjBmB,EAAAA,mBAAmB,EAAE,CAACzB,MAAD,EAASqB,eAAT,KAA6B;AAE9C,QAAIA,eAAe,GAAGvB,KAAK,CAAC6B,UAAN,CAAiBX,IAAjB,CAAtB;AACA,WAAQ,GAAEnB,GAAG,CAACY,QAAS,UAAST,MAAO,0CAAyCqB,eAAgB,UAASxB,GAAG,CAACa,SAAU,EAAvH;AACH,GAhDgB;AAkDjBiB,EAAAA,UAAU,EAAGX,IAAD,IAAU;AAElB,WAAOa,IAAI,CAACb,IAAD,CAAJ,CAAWc,WAAX,GAAyBC,KAAzB,CAA+B,GAA/B,EAAoC,CAApC,EAAuCC,OAAvC,CAA+C,IAA/C,EAAqD,EAArD,CAAP;AACH;AArDgB,CAAd","sourcesContent":["import { iex } from './iex.js';\n\nexport const stock = {\n    \n    latestPrice: (ticker, callback) => {\n        \n        fetch(stock.latestPriceURL(ticker))\n        .then((response) => response.json()) \n        .then((data) => callback(stock.formatPriceData(data)))\n    },\n    \n    latestPriceURL: (ticker) => {\n        return `${iex.base_url}/stock/${ticker}/intraday-prices?chartLast=1&token=${iex.api_token}`\n    },\n        \n    formatPriceData: (data) => {\n        \n        const stockData = data[data.length - 1]\n        const formattedData = {}\n        formattedData.price = stockData.close\n        formattedData.date = stockData.date\n        formattedData.time = stockData.label\n        return formattedData\n    },\n    \n    getYersterdaysClose: (ticket, lastTradingDate, callback) => {\n    \n        stock.getLastTradingDate(date).then((data) =>{\n  \n            if (lastTradingDate != \"\" && lastTradingDate != undefined) {\n                const url = stock.yersterdaysCloseURL(ticker, lastTradingDate)\n                fetch(url)\n                .then((response) => response.json()) \n                .then((data) => callback(stock.formatPriceData(data)))\n            }\n        })\n    }, \n    \n    getLastTradingDate: (date) => {\n        \n        var today = formatDate(date);\n        const url = `${iex.base_url}/ref-data/us/dates/trade/last/1/${today}?token=${iex.api_token}`\n        \n        return fetch(url).then((res) => res.json());\n    },\n    \n    yersterdaysCloseURL: (ticker, lastTradingDate) => {\n        \n        var lastTradingDate = stock.formatDate(date);\n        return `${iex.base_url}/stock/${ticker}/intraday-prices?chartLast=1&exactDate=${lastTradingDate}&token=${iex.api_token}`\n    },\n    \n    formatDate: (date) => {\n        \n        return Date(date).toISOString().split('T')[0].replace(/-/g, '')\n    }\n    \n}"]},"metadata":{},"sourceType":"module"}